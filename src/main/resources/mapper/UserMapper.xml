<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">
    <!-- 自定义返回结果集 -->
    <resultMap id="userMap" type="com.example.model.User">
        <id property="id" column="id" jdbcType="INTEGER"></id>
        <result property="username" column="username" jdbcType="VARCHAR"></result>
        <result property="password" column="password" jdbcType="VARCHAR"></result>
        <result property="sex" column="sex" jdbcType="INTEGER"></result>
        <result property="phone" column="phone" jdbcType="VARCHAR"></result>
        <result property="email" column="email" jdbcType="VARCHAR"></result>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"></result>
    </resultMap>

    <!-- 定义 SQL 语句，其中 id 需要和接口中的方法名一致 -->
    <!-- useGeneratedKeys：实现自动生成主键 -->
    <!-- keyProperty： 唯一标记一个属性 -->
    <!-- parameterType 指明查询时使用的参数类型，resultType 指明查询返回的结果集类型 -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" parameterType="com.example.model.User">
        insert into user
        (
          username,
          password,
          sex,
          phone,
          email
        <if test="createTime != null">
          ,create_time
        </if>
        )
        values
        (
          #{username},
          #{password},
          #{sex},
          #{phone},
          #{email}
          <if test="createTime != null">
              ,#{createTime}
          </if>
        )
    </insert>

    <update id="updateUser"  parameterType="com.example.model.User">
        update user set
        password=#{password} where
        id=#{id}
    </update>

    <delete id="deleteUser" parameterType="com.example.model.User">
        delete from user where
        id=#{id}
    </delete>

    <!-- 如未为 Java Bean 起类别名，resultType="com.example.model.User" -->

    <!-- 使用resultType时，一定要保证，你属性名与字段名相同；如果不相同，就使用resultMap -->
    <select id="getUser" parameterType="Integer" resultType="com.example.model.User">
        select * from user where id=#{id}
    </select>

    <select id="getUsers" parameterType="com.example.model.User" resultMap="userMap">
        select user.id,user.username,user.sex,user.phone,user.email,user.create_time from user
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="username != null">
                AND username = #{username}
            </if>
            <if test="password != null">
                AND password = #{password}
            </if>
            <if test="sex != null">
                AND sex = #{sex}
            </if>
            <if test="phone != null">
                AND phone = #{phone}
            </if>
            <if test="email != null">
                AND email = #{email}
            </if>
            <if test="createTime != null">
                AND cerate_time = #{createTime}
            </if>
        </where>
    </select>

</mapper>